class Solution:
    def numWays(self, s: str) -> int:
        MOD = 10 ** 9 + 7
        N = len(s)
        c1 = s.count('1')
        
        if c1 == 0:
            return (((N - 1) * (N - 2)) // 2) % MOD
        
        if c1 % 3 != 0:
            return 0
        
        segment_count = c1 // 3
        first_ones, second_ones, third_ones = [], [], []
        
        cnt = 0
        for i, char in enumerate(s):
            if char == '1':
                cnt += 1
            if cnt == segment_count:
                first_ones.append(i)
            elif cnt == 2 * segment_count:
                second_ones.append(i)
            elif cnt == 3 * segment_count:
                third_ones.append(i)
        
        ways_first_split = first_ones[-1] - first_ones[0] + 1
        ways_second_split = second_ones[-1] - second_ones[0] + 1
                
        return (ways_first_split * ways_second_split) % MOD
