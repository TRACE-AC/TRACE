class Solution {
public:
    int closestTarget(vector<string>& words, string target, int startIndex) {
        int n = words.size();
        int leftDistance = n, rightDistance = n;
        
        for (int i = 0; i < n; ++i) {
            if (words[i] == target) {
                int leftSteps = (startIndex >= i) ? startIndex - i : startIndex + n - i;
                int rightSteps = (startIndex <= i) ? i - startIndex : i + n - startIndex;
                leftSteps %= n;
                rightSteps %= n;
                leftDistance = min(leftDistance, leftSteps);
                rightDistance = min(rightDistance, rightSteps);
            }
        }
        
        int minDistance = min(leftDistance, rightDistance);
        return minDistance == n ? -1 : minDistance;
    }
};
