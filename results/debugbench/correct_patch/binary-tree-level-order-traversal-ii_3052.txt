class Solution:
    def levelOrderBottom(self, root: Optional[TreeNode]) -> List[List[int]]:
        def checkReverse(ans):
            l, r = 0, len(ans) - 1
            while l <= r:
                ans[l], ans[r] = ans[r], ans[l]
                l += 1
                r -= 1
            return ans

        if not root:
            return []
        q, ans = [root], []
        while q:
            n, l = len(q), []
            for i in range(n):
                curr = q.pop(0)
                l.append(curr.val)
                if curr.left is not None:
                    q.append(curr.left)
                if curr.right is not None:
                    q.append(curr.right)
            ans.append(l)
        return checkReverse(ans)
