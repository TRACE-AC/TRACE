class Solution {
    String convert(String s)
    {
        if (s == null || s.length() == 0) return ""; // Handle edge case for empty string
        char prevCh = s.charAt(0);
        int prevCount = 1;
        StringBuilder ans = new StringBuilder();
        for (int i = 1; i < s.length(); i++) // Corrected loop boundary
        {
            char currCh = s.charAt(i);
            if (currCh != prevCh)   
            {
                ans.append(Integer.toString(prevCount));
                ans.append(prevCh);
                prevCount = 1;
                prevCh = currCh;
            }
            else prevCount++; // Increment counter if current character matches previous
        }
        ans.append(Integer.toString(prevCount)); // Append last counted characters
        ans.append(prevCh);
        return ans.toString();
    }
    public String countAndSay(int n) 
    {
        String prevStr = "1";
        for (int i = 2; i <= n; i++)
        {
            String cnsNum = convert(prevStr);
            prevStr = cnsNum;
        }
        return prevStr;
    }
}
