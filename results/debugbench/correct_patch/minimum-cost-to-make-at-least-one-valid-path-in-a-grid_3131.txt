import collections
from typing import List

class Solution:
    def minCost(self, grid: List[List[int]]) -> int:
        m, n = len(grid), len(grid[0])
        distance = [[m * n for _ in range(n)] for _ in range(m)]
        distance[0][0] = 0 
        q = collections.deque([(0, 0, 0)])
        
        while q:
            c, i, j = q.popleft()
            
            for di, dj, d in [(0, 1, 1), (0, -1, 2), (1, 0, 3), (-1, 0, 4)]:
                ci, cj = i + di, j + dj
                
                if 0 <= ci < m and 0 <= cj < n:
                    new_cost = c
                    if grid[i][j] != d:
                        new_cost += 1
                    
                    if new_cost < distance[ci][cj]:
                        distance[ci][cj] = new_cost
                        if grid[i][j] == d:
                            q.appendleft((new_cost, ci, cj))
                        else:
                            q.append((new_cost, ci, cj))
        
        return distance[m - 1][n - 1]
