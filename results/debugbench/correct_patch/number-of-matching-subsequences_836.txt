class Solution {
public:
    int numMatchingSubseq(string s, vector<string>& words) {
        map<char,vector<int>> count;
        for(int i = 0; i < s.size(); i++){
            count[s[i]].push_back(i);
        }
        int z = 0;
        for(auto &x: words){
            int p = -1;
            int r = 0;
            for(int j = 0; j < x.size(); j++){
                auto it = upper_bound(count[x[j]].begin(), count[x[j]].end(), p);
                if(count.find(x[j]) == count.end() || it == count[x[j]].end()) { r = 1; break; }
                p = *it;
            }
            if(r == 0) z += 1;
        }
        return z;
    }
};
