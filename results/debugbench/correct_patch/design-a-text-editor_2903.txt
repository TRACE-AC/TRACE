class TextEditor:
    def __init__(self):
        self.text = ""
        self.cursor_pos = 0
        
    def addText(self, text: str) -> None:
        self.text = self.text[:self.cursor_pos] + text + self.text[self.cursor_pos:]
        self.cursor_pos += len(text)
        
    def deleteText(self, k: int) -> int:
        delete_count = min(k, self.cursor_pos)
        self.text = self.text[:self.cursor_pos - delete_count] + self.text[self.cursor_pos:]
        self.cursor_pos -= delete_count
        return delete_count
    
    def cursorLeft(self, k: int) -> str:
        self.cursor_pos = max(0, self.cursor_pos - k)
        left_text_length = min(10, self.cursor_pos)
        return self.text[self.cursor_pos - left_text_length:self.cursor_pos]
    
    def cursorRight(self, k: int) -> str:
        self.cursor_pos = min(len(self.text), self.cursor_pos + k)
        left_text_length = min(10, self.cursor_pos)
        return self.text[self.cursor_pos - left_text_length:self.cursor_pos]
