class Solution {

    public long maximumSubsequenceCount(String s, String p) {
        long max = 0;
        
        // Count subsequences when pattern[0] is added
        long countA = 0, ans = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == p.charAt(1)) ans += countA;
            if (s.charAt(i) == p.charAt(0)) countA++;
        }
        max = Math.max(max, ans + countA); // Add countA for adding pattern[0]

        // Count subsequences when pattern[1] is added 
        long countB = 0;
        ans = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            if (s.charAt(i) == p.charAt(0)) ans += countB;
            if (s.charAt(i) == p.charAt(1)) countB++;
        }
        max = Math.max(max, ans + countB); // Add countB for adding pattern[1]

        return max;
    }
}
