# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxProduct(self, root: Optional[TreeNode]) -> int:
        def dfs(node):
            if not node:
                return 0
            left_sum = dfs(node.left)
            right_sum = dfs(node.right)
            node.val += left_sum + right_sum
            return node.val

        dfs(root)

        ans, total_sum = 0, root.val

        def calculate_max_product(node):
            nonlocal ans
            if not node:
                return
            current_sum = node.val
            ans = max(ans, (total_sum - current_sum) * current_sum)
            calculate_max_product(node.left)
            calculate_max_product(node.right)

        calculate_max_product(root)
        return ans % 1000000007
