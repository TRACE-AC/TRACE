class Solution {
public:
    int solve(int idx, int prev, string &s, vector<vector<int>> &dp) {
        if (idx == s.size()) {
            return 0;
        }
        if (dp[idx][prev] != -1) return dp[idx][prev];
        
        int flipToZero = (s[idx] == '1') + solve(idx + 1, 0, s, dp);
        int flipToOne = (s[idx] == '0') + solve(idx + 1, 1, s, dp);
        
        if (prev == 0) {
            dp[idx][prev] = min(flipToZero, flipToOne);
        } else {
            dp[idx][prev] = flipToOne;
        }

        return dp[idx][prev];
    }
    
    int minFlipsMonoIncr(string s) {
        vector<vector<int>> dp(s.size(), vector<int>(2, -1));
        return solve(0,0,s,dp);
    }
};
