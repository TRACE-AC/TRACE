from typing import List

class Solution:
    def longestCycle(self, edges: List[int]) -> int:
        n = len(edges)
        bl = [0] * n
        mx = -1
        for i in range(n):
            if bl[i] == 0:
                x = i
                l = 0
                path = []
                while x != -1 and bl[x] == 0:
                    bl[x] = 1  # Mark the node as visited
                    path.append(x)
                    l += 1
                    x = edges[x]
                if x != -1 and x in path:
                    mx = max(mx, l - path.index(x))  # Calculate the cycle length using list index
        return mx
